{"ast":null,"code":"var _jsxFileName = \"/Users/bottlecapmedia/Desktop/Applications/saturday/src/Pages/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router';\n/**\n* @author\n* @function Quiz\n**/\n// We are going to have a list of questions\n// from this list we're going to randomly select an index\n// this index will be stored in memory and deleted from the other array\n// we then run an conditional statement to determine what are the answers\n// we then concatinate when the answer is correct or do nothing if it is not. \n// we're nor going to call and random search function on the old array for another question. \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quiz = props => {\n  _s();\n\n  var completed = [];\n  var test = true;\n  var collective_answers = 0;\n  const question = useRef();\n  const a = useRef();\n  const b = useRef();\n  const c = useRef();\n  const d = useRef();\n  const list_of_questions = ['Saturday 7G Sweet & Sour Ready-to-Roll:', 'Saturday 7G Sweet & Sour Ready-to-Roll is coming in what THC%?', \"When speaking about the 1G Blood Orange roduct, Id start with:\", 'hows mom?', 'what do you do?'];\n  const history = useHistory();\n\n  const validation = n => {\n    console.log(n);\n  };\n\n  useEffect(() => {\n    randList();\n  }, []);\n\n  const randList = data => {\n    var newList = list_of_questions;\n\n    if (completed.length >= newList.length) {\n      console.log('redirect to new page');\n    } else {\n      // Run validation funtion.\n      validation(`validaton check: ${completed[completed.length - 1]}`);\n      let random = Math.round(Math.random() * 4);\n      const check_completed = completed.find(element => element == random);\n      console.log(check_completed);\n\n      if (check_completed || check_completed === 0) {\n        randList();\n      } else {\n        completed.push(random);\n        question.current.textContent = list_of_questions[random];\n        console.log(completed);\n\n        switch (random) {\n          case 0:\n            a.current.textContent = 'Is a Sativa Offering';\n            b.current.textContent = 'Is an Indica Offering';\n            c.current.textContent = 'Is a Hybrid Offering';\n            d.current.textContent = '';\n            break;\n\n          case 1:\n            a.current.textContent = '11%-15%';\n            b.current.textContent = '16%-20%';\n            c.current.textContent = '20%+';\n            d.current.textContent = '';\n            break;\n\n          case 2:\n            a.current.textContent = 'The Flavour';\n            b.current.textContent = 'The Value';\n            c.current.textContent = 'The Brand';\n            d.current.textContent = 'The Convenience of 510 Carts';\n            break;\n\n          case 3:\n            a.current.textContent = 'ewqe';\n            b.current.textContent = 'me';\n            c.current.textContent = 'iuo';\n            d.current.textContent = 'greq';\n            break;\n\n          case 4:\n            a.current.textContent = 'Counsellors ';\n            b.current.textContent = 'vet';\n            c.current.textContent = 'hacker';\n            d.current.textContent = 'army';\n            break;\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Prizing\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quiz_holder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"title_holder\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          ref: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"answer_list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"green_bg\",\n          onClick: randList,\n          \"data-id\": \"1\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"ans\",\n            ref: a\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 70\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"green_bg\",\n          onClick: randList,\n          \"data-id\": \"2\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"ans\",\n            ref: b\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 70\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"green_bg\",\n          onClick: randList,\n          \"data-id\": \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"ans\",\n            ref: c\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 70\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"green_bg\",\n          onClick: randList,\n          \"data-id\": \"4\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"ans\",\n            ref: d\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 70\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Quiz, \"ws4RqV/UBV8PWh58OAnY0NWf6ak=\", false, function () {\n  return [useHistory];\n});\n\n_c = Quiz;\nexport default Quiz; // \n// \n// console.log(newList[n])\n// completed.push(random)\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Desktop/Applications/saturday/src/Pages/Quiz.js"],"names":["React","useEffect","useRef","useHistory","Quiz","props","completed","test","collective_answers","question","a","b","c","d","list_of_questions","history","validation","n","console","log","randList","data","newList","length","random","Math","round","check_completed","find","element","push","current","textContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { useHistory } from 'react-router'\n\n/**\n* @author\n* @function Quiz\n**/\n\n// We are going to have a list of questions\n// from this list we're going to randomly select an index\n// this index will be stored in memory and deleted from the other array\n// we then run an conditional statement to determine what are the answers\n// we then concatinate when the answer is correct or do nothing if it is not. \n// we're nor going to call and random search function on the old array for another question. \n\nconst Quiz = (props) => {\n    var completed = []\n    var test = true;\n    var collective_answers = 0\n    const question = useRef()\n    const a = useRef()\n    const b = useRef()\n    const c = useRef()\n    const d = useRef()\n    const list_of_questions = ['Saturday 7G Sweet & Sour Ready-to-Roll:', 'Saturday 7G Sweet & Sour Ready-to-Roll is coming in what THC%?', \"When speaking about the 1G Blood Orange roduct, Id start with:\", 'hows mom?', 'what do you do?']\n    const history = useHistory()\n\n    const validation = (n) => { \n        console.log(n)\n    }\n\n\n   \n    useEffect(()=>{\n        randList()\n    },[])\n\n    const randList = (data) => {\n        var newList = list_of_questions\n        if (completed.length >= newList.length) {\n            console.log('redirect to new page')\n        } else{\n                // Run validation funtion.\n            validation(`validaton check: ${completed[completed.length -1]}`)\n\n            let random = Math.round(Math.random() * 4)\n            const check_completed = completed.find(element => element == random)\n            console.log(check_completed)\n\n            if (check_completed || check_completed === 0) {\n                randList()\n            }\n            else{\n                completed.push(random)\n                question.current.textContent = list_of_questions[random]\n                console.log(completed)\n                switch(random){\n                    case 0:\n                        a.current.textContent = 'Is a Sativa Offering'\n                        b.current.textContent = 'Is an Indica Offering'\n                        c.current.textContent = 'Is a Hybrid Offering'\n                        d.current.textContent = ''\n                    \n                    break;\n                    case 1:\n                        a.current.textContent = '11%-15%'\n                        b.current.textContent = '16%-20%'\n                        c.current.textContent = '20%+'\n                        d.current.textContent = ''\n                      \n                    break;\n                    case 2:\n                        a.current.textContent = 'The Flavour'\n                        b.current.textContent = 'The Value'\n                        c.current.textContent = 'The Brand'\n                        d.current.textContent = 'The Convenience of 510 Carts'\n                      \n                    break;\n                    case 3:\n                        a.current.textContent = 'ewqe'\n                        b.current.textContent = 'me'\n                        c.current.textContent = 'iuo'\n                        d.current.textContent = 'greq'\n                       \n                    break;\n                    case 4:\n                        a.current.textContent = 'Counsellors '\n                        b.current.textContent = 'vet'\n                        c.current.textContent = 'hacker'\n                        d.current.textContent = 'army'\n                    break;\n                }\n            }\n        }\n    }\n\n    \n    return (\n        <div className='Prizing'>\n\n        \n          <div id='quiz_holder'>\n              <div id='title_holder'>\n              <h2 ref={question}></h2>\n              </div>\n            <div id='answer_list'>\n            <div className='green_bg' onClick={randList} data-id='1'><p className='ans' ref={a}></p></div>\n            <div className='green_bg' onClick={randList} data-id='2'><p className='ans' ref={b}></p></div>\n            <div className='green_bg' onClick={randList} data-id='3'><p className='ans' ref={c}></p></div>\n            <div className='green_bg' onClick={randList} data-id='4'><p className='ans' ref={d}></p></div>\n            </div>\n          </div>\n            \n        </div>\n    )\n\n}\n\nexport default Quiz\n\n// \n// \n\n\n// console.log(newList[n])\n// completed.push(random)"]},"metadata":{},"sourceType":"module"}