{"ast":null,"code":"var _jsxFileName = \"/Users/bottlecapmedia/Desktop/Applications/saturday/src/Pages/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router';\n/**\n* @author\n* @function Quiz\n**/\n// We are going to have a list of questions\n// from this list we're going to randomly select an index\n// this index will be stored in memory and deleted from the other array\n// we then run an conditional statement to determine what are the answers\n// we then concatinate when the answer is correct or do nothing if it is not. \n// we're nor going to call and random search function on the old array for another question. \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quiz = props => {\n  _s();\n\n  const a = useRef();\n  const b = useRef();\n  const c = useRef();\n  const d = useRef();\n  const list_of_questions = ['how are you?', 'are you okay?', 'where is john?', 'hows mom?', 'what do you do?'];\n  const history = useHistory();\n  var completed = [];\n  useEffect(() => {\n    randList();\n  }, []);\n\n  const randList = () => {\n    var newList = list_of_questions;\n\n    if (completed.length >= newList.length) {\n      console.log('redirect to new page');\n    } else {\n      let random = Math.round(Math.random() * 4);\n      const check_completed = completed.find(element => element == random);\n      console.log(check_completed);\n\n      if (check_completed || check_completed === 0) {\n        randList();\n      } else {\n        completed.push(random);\n        console.log(completed);\n\n        switch (random) {\n          case 0:\n            a.current.textContent = 'good';\n            b.current.textContent = 'great';\n            c.current.textContent = 'ok';\n            d.current.textContent = 'bad';\n            break;\n\n          case 1:\n            a.current.textContent = 'fine';\n            b.current.textContent = 'i guess';\n            c.current.textContent = 'naw';\n            d.current.textContent = 'hmmm';\n            break;\n\n          case 2:\n            a.current.textContent = 'stable';\n            b.current.textContent = 'house';\n            c.current.textContent = 'tree house';\n            d.current.textContent = 'shopping';\n            break;\n\n          case 3:\n            a.current.textContent = 'ewqe';\n            b.current.textContent = 'me';\n            c.current.textContent = 'iuo';\n            d.current.textContent = 'greq';\n            break;\n\n          case 4:\n            a.current.textContent = 'Counsellors ';\n            b.current.textContent = 'vet';\n            c.current.textContent = 'hacker';\n            d.current.textContent = 'army';\n            break;\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"Prizing\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: randList,\n      children: \"Select item from list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        ref: a\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        ref: b\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        ref: c\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        ref: d\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Quiz, \"3IeZPJLvvBMsuH8J6XRvqtgW4jA=\", false, function () {\n  return [useHistory];\n});\n\n_c = Quiz;\nexport default Quiz; // \n// \n// console.log(newList[n])\n// completed.push(random)\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Desktop/Applications/saturday/src/Pages/Quiz.js"],"names":["React","useEffect","useRef","useHistory","Quiz","props","a","b","c","d","list_of_questions","history","completed","randList","newList","length","console","log","random","Math","round","check_completed","find","element","push","current","textContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { useHistory } from 'react-router'\n\n/**\n* @author\n* @function Quiz\n**/\n\n// We are going to have a list of questions\n// from this list we're going to randomly select an index\n// this index will be stored in memory and deleted from the other array\n// we then run an conditional statement to determine what are the answers\n// we then concatinate when the answer is correct or do nothing if it is not. \n// we're nor going to call and random search function on the old array for another question. \n\nconst Quiz = (props) => {\n    const a = useRef()\n    const b = useRef()\n    const c = useRef()\n    const d = useRef()\n    \n    const list_of_questions = ['how are you?', 'are you okay?', 'where is john?', 'hows mom?', 'what do you do?']\n    const history = useHistory()\n    var completed = []\n   \n    useEffect(()=>{\n        randList()\n    },[])\n    const randList = () => {\n        var newList = list_of_questions\n        if (completed.length >= newList.length) {\n            console.log('redirect to new page')\n        } else{\n            let random = Math.round(Math.random() * 4)\n            const check_completed = completed.find(element => element == random)\n            console.log(check_completed)\n\n            if (check_completed || check_completed === 0) {\n                randList()\n            }\n            else{\n                completed.push(random)\n                console.log(completed)\n                switch(random){\n                    case 0:\n                        a.current.textContent = 'good'\n                        b.current.textContent = 'great'\n                        c.current.textContent = 'ok'\n                        d.current.textContent = 'bad'\n                    break;\n                    case 1:\n                        a.current.textContent = 'fine'\n                        b.current.textContent = 'i guess'\n                        c.current.textContent = 'naw'\n                        d.current.textContent = 'hmmm'\n                    break;\n                    case 2:\n                        a.current.textContent = 'stable'\n                        b.current.textContent = 'house'\n                        c.current.textContent = 'tree house'\n                        d.current.textContent = 'shopping'\n                    break;\n                    case 3:\n                        a.current.textContent = 'ewqe'\n                        b.current.textContent = 'me'\n                        c.current.textContent = 'iuo'\n                        d.current.textContent = 'greq'\n                    break;\n                    case 4:\n                        a.current.textContent = 'Counsellors '\n                        b.current.textContent = 'vet'\n                        c.current.textContent = 'hacker'\n                        d.current.textContent = 'army'\n                    break;\n                }\n            }\n        }\n    }\n\n\n    return (\n        <div id='Prizing'>\n            <button onClick={randList}>Select item from list</button>\n          <div>\n            <span ref={a}></span>\n            <span ref={b}></span>\n            <span ref={c}></span>\n            <span ref={d}></span>\n          </div>\n            \n        </div>\n    )\n\n}\n\nexport default Quiz\n\n// \n// \n\n\n// console.log(newList[n])\n// completed.push(random)"]},"metadata":{},"sourceType":"module"}