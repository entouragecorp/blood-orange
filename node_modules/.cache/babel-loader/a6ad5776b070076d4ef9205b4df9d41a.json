{"ast":null,"code":"var _jsxFileName = \"/Users/bottlecapmedia/Desktop/Applications/saturday/src/Pages/Quiz.js\";\nimport React from 'react';\n/**\n* @author\n* @function Quiz\n**/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quiz = props => {\n  // We are going to have a list of questions\n  const list_of_questions = ['how are you?', 'are you okay?', 'where is john?']; // from this list we're going to randomly select an index\n  // this index will be stored in memory and deleted from the other array\n\n  var completed = []; // we then run an conditional statement to determine what are the answers\n  // we then concatinate when the answer is correct or do nothing if it is not. \n  // we're nor going to call and random search function on the old array for another question. \n\n  let starter_random = Math.round(Math.random() * 2);\n\n  const randList = n => {\n    let random = Math.round(Math.random() * 2);\n    var newList = list_of_questions;\n    var check_completed = completed.find(element => element === n);\n\n    if (check_completed === undefined) {\n      completed.push(n);\n      console.log(completed);\n    } else if (check_completed) {\n      randList(random);\n    }\n\n    console.log(`completed: ${completed}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"Prizing\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: randList(starter_random),\n      children: \"Select item from list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Quiz;\nexport default Quiz; // console.log(newList[n])\n// completed.push(random)\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Desktop/Applications/saturday/src/Pages/Quiz.js"],"names":["React","Quiz","props","list_of_questions","completed","starter_random","Math","round","random","randList","n","newList","check_completed","find","element","undefined","push","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACxB;AACA,QAAMC,iBAAiB,GAAG,CAAC,cAAD,EAAiB,eAAjB,EAAkC,gBAAlC,CAA1B,CAFwB,CAGxB;AACA;;AACA,MAAIC,SAAS,GAAG,EAAhB,CALwB,CAMxB;AACA;AACA;;AACA,MAAIC,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAArB;;AAEA,QAAMC,QAAQ,GAAIC,CAAD,IAAM;AACnB,QAAIF,MAAM,GAAGF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAb;AACA,QAAIG,OAAO,GAAGR,iBAAd;AAEA,QAAIS,eAAe,GAAGR,SAAS,CAACS,IAAV,CAAeC,OAAO,IAAIA,OAAO,KAAKJ,CAAtC,CAAtB;;AACA,QAAGE,eAAe,KAAKG,SAAvB,EAAiC;AAC7BX,MAAAA,SAAS,CAACY,IAAV,CAAeN,CAAf;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYd,SAAZ;AACH,KAHD,MAIK,IAAGQ,eAAH,EAAmB;AACpBH,MAAAA,QAAQ,CAACD,MAAD,CAAR;AACH;;AAIDS,IAAAA,OAAO,CAACC,GAAR,CAAa,cAAad,SAAU,EAApC;AACH,GAhBD;;AAkBE,sBACE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA,2BACI;AAAQ,MAAA,OAAO,EAAEK,QAAQ,CAACJ,cAAD,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAMA,CAnCF;;KAAMJ,I;AAqCN,eAAeA,IAAf,C,CAGA;AACA","sourcesContent":["import React from 'react'\n\n/**\n* @author\n* @function Quiz\n**/\n\nconst Quiz = (props) => {\n// We are going to have a list of questions\nconst list_of_questions = ['how are you?', 'are you okay?', 'where is john?']\n// from this list we're going to randomly select an index\n// this index will be stored in memory and deleted from the other array\nvar completed = []\n// we then run an conditional statement to determine what are the answers\n// we then concatinate when the answer is correct or do nothing if it is not. \n// we're nor going to call and random search function on the old array for another question. \nlet starter_random = Math.round(Math.random() * 2)\n\nconst randList = (n) =>{\n    let random = Math.round(Math.random() * 2)\n    var newList = list_of_questions\n  \n    var check_completed = completed.find(element => element === n)\n    if(check_completed === undefined){\n        completed.push(n)\n        console.log(completed)\n    }\n    else if(check_completed){\n        randList(random)\n    }\n       \n        \n  \n    console.log(`completed: ${completed}`)\n}\n\n  return(\n    <div id='Prizing'>\n        <button onClick={randList(starter_random)}>Select item from list</button>\n    </div>\n   )\n\n }\n\nexport default Quiz\n\n\n// console.log(newList[n])\n// completed.push(random)"]},"metadata":{},"sourceType":"module"}