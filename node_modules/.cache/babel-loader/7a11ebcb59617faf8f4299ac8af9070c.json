{"ast":null,"code":"var _jsxFileName = \"/Users/bottlecapmedia/Desktop/Applications/saturday/src/Pages/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router';\n/**\n* @author\n* @function Quiz\n**/\n// We are going to have a list of questions\n// from this list we're going to randomly select an index\n// this index will be stored in memory and deleted from the other array\n// we then run an conditional statement to determine what are the answers\n// we then concatinate when the answer is correct or do nothing if it is not. \n// we're nor going to call and random search function on the old array for another question. \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quiz = props => {\n  _s();\n\n  const question = useRef();\n  const a = useRef();\n  const b = useRef();\n  const c = useRef();\n  const d = useRef();\n  const list_of_questions = ['Saturday 7G Sweet & Sour Ready-to-Roll:', 'Saturday 7G Sweet & Sour Ready-to-Roll is coming in what THC%?', \"When speaking about the 1G Blood Orange roduct, Id start with:\", 'hows mom?', 'what do you do?'];\n  const history = useHistory();\n  var completed = [];\n  useEffect(() => {\n    randList();\n  }, []);\n\n  const randList = () => {\n    var newList = list_of_questions;\n\n    if (completed.length >= newList.length) {\n      console.log('redirect to new page');\n    } else {\n      let random = Math.round(Math.random() * 4);\n      const check_completed = completed.find(element => element == random);\n      console.log(check_completed);\n\n      if (check_completed || check_completed === 0) {\n        randList();\n      } else {\n        completed.push(random);\n        question.current.textContent = list_of_questions[random];\n        console.log(completed);\n\n        switch (random) {\n          case 0:\n            a.current.textContent = 'Is a Sativa Offering';\n            b.current.textContent = 'Is an Indica Offering';\n            c.current.textContent = 'Is a Hybrid Offering';\n            d.current.textContent = null;\n            break;\n\n          case 1:\n            a.current.textContent = '11%-15%';\n            b.current.textContent = '16%-20%';\n            c.current.textContent = '20%+';\n            d.current.textContent = null;\n            break;\n\n          case 2:\n            a.current.textContent = 'The Flavour';\n            b.current.textContent = 'The Value';\n            c.current.textContent = 'The Brand';\n            d.current.textContent = 'The Convenience of 510 Carts';\n            break;\n\n          case 3:\n            a.current.textContent = 'ewqe';\n            b.current.textContent = 'me';\n            c.current.textContent = 'iuo';\n            d.current.textContent = 'greq';\n            break;\n\n          case 4:\n            a.current.textContent = 'Counsellors ';\n            b.current.textContent = 'vet';\n            c.current.textContent = 'hacker';\n            d.current.textContent = 'army';\n            break;\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Prizing\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: randList,\n      children: \"Select item from list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quiz_holder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"title_holder\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          ref: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"answer_list\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ans\",\n          ref: a\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ans\",\n          ref: b\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ans\",\n          ref: c\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 12\n        }, this), d.current.textContent ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ans\",\n          ref: d\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 35\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Quiz, \"ws4RqV/UBV8PWh58OAnY0NWf6ak=\", false, function () {\n  return [useHistory];\n});\n\n_c = Quiz;\nexport default Quiz; // \n// \n// console.log(newList[n])\n// completed.push(random)\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Desktop/Applications/saturday/src/Pages/Quiz.js"],"names":["React","useEffect","useRef","useHistory","Quiz","props","question","a","b","c","d","list_of_questions","history","completed","randList","newList","length","console","log","random","Math","round","check_completed","find","element","push","current","textContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { useHistory } from 'react-router'\n\n/**\n* @author\n* @function Quiz\n**/\n\n// We are going to have a list of questions\n// from this list we're going to randomly select an index\n// this index will be stored in memory and deleted from the other array\n// we then run an conditional statement to determine what are the answers\n// we then concatinate when the answer is correct or do nothing if it is not. \n// we're nor going to call and random search function on the old array for another question. \n\nconst Quiz = (props) => {\n    const question = useRef()\n    const a = useRef()\n    const b = useRef()\n    const c = useRef()\n    const d = useRef()\n    \n    const list_of_questions = ['Saturday 7G Sweet & Sour Ready-to-Roll:', 'Saturday 7G Sweet & Sour Ready-to-Roll is coming in what THC%?', \"When speaking about the 1G Blood Orange roduct, Id start with:\", 'hows mom?', 'what do you do?']\n\n    const history = useHistory()\n    var completed = []\n   \n    useEffect(()=>{\n        randList()\n    },[])\n    const randList = () => {\n        var newList = list_of_questions\n        if (completed.length >= newList.length) {\n            console.log('redirect to new page')\n        } else{\n            let random = Math.round(Math.random() * 4)\n            const check_completed = completed.find(element => element == random)\n            console.log(check_completed)\n\n            if (check_completed || check_completed === 0) {\n                randList()\n            }\n            else{\n                completed.push(random)\n                question.current.textContent = list_of_questions[random]\n                console.log(completed)\n                switch(random){\n                    case 0:\n                        a.current.textContent = 'Is a Sativa Offering'\n                        b.current.textContent = 'Is an Indica Offering'\n                        c.current.textContent = 'Is a Hybrid Offering'\n                        d.current.textContent = null\n                    break;\n                    case 1:\n                        a.current.textContent = '11%-15%'\n                        b.current.textContent = '16%-20%'\n                        c.current.textContent = '20%+'\n                        d.current.textContent = null\n                    break;\n                    case 2:\n                        a.current.textContent = 'The Flavour'\n                        b.current.textContent = 'The Value'\n                        c.current.textContent = 'The Brand'\n                        d.current.textContent = 'The Convenience of 510 Carts'\n                    break;\n                    case 3:\n                        a.current.textContent = 'ewqe'\n                        b.current.textContent = 'me'\n                        c.current.textContent = 'iuo'\n                        d.current.textContent = 'greq'\n                    break;\n                    case 4:\n                        a.current.textContent = 'Counsellors '\n                        b.current.textContent = 'vet'\n                        c.current.textContent = 'hacker'\n                        d.current.textContent = 'army'\n                    break;\n                }\n            }\n        }\n    }\n\n\n    return (\n        <div className='Prizing'>\n            <button onClick={randList}>Select item from list</button>\n        \n          <div id='quiz_holder'>\n              <div id='title_holder'>\n              <h2 ref={question}></h2>\n              </div>\n            \n\n            <div id='answer_list'>\n            <span className='ans' ref={a}></span>\n            <span className='ans' ref={b}></span>\n           <span className='ans' ref={c}></span>\n           {d.current.textContent?<span className='ans' ref={d}></span>: ''}\n            </div>\n          </div>\n            \n        </div>\n    )\n\n}\n\nexport default Quiz\n\n// \n// \n\n\n// console.log(newList[n])\n// completed.push(random)"]},"metadata":{},"sourceType":"module"}