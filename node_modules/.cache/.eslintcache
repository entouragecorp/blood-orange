[{"/Users/bottlecapmedia/Documents/Applications/saturday/src/index.js":"1","/Users/bottlecapmedia/Documents/Applications/saturday/src/App.js":"2","/Users/bottlecapmedia/Documents/Applications/saturday/src/reportWebVitals.js":"3","/Users/bottlecapmedia/Documents/Applications/saturday/src/Pages/Landing_page.js":"4","/Users/bottlecapmedia/Documents/Applications/saturday/src/Pages/Prizing.js":"5","/Users/bottlecapmedia/Documents/Applications/saturday/src/Pages/Video.js":"6","/Users/bottlecapmedia/Documents/Applications/saturday/src/Pages/BloodOrange.js":"7","/Users/bottlecapmedia/Documents/Applications/saturday/src/Pages/Quiz.js":"8","/Users/bottlecapmedia/Documents/Applications/saturday/src/Pages/Datacapture.js":"9","/Users/bottlecapmedia/Documents/Applications/saturday/src/Pages/Instructions.js":"10","/Users/bottlecapmedia/Documents/Applications/saturday/src/Components/NextButton/Next.js":"11","/Users/bottlecapmedia/Documents/Applications/saturday/src/Pages/RoombaPrize.js":"12","/Users/bottlecapmedia/Documents/Applications/saturday/src/Pages/Redirecttoquiz.js":"13"},{"size":502,"mtime":1629911350205,"results":"14","hashOfConfig":"15"},{"size":1352,"mtime":1635431833349,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1629833036740,"results":"17","hashOfConfig":"15"},{"size":7958,"mtime":1635448888185,"results":"18","hashOfConfig":"15"},{"size":1939,"mtime":1631910313015,"results":"19","hashOfConfig":"15"},{"size":718,"mtime":1635255466997,"results":"20","hashOfConfig":"15"},{"size":1690,"mtime":1635873729894,"results":"21","hashOfConfig":"15"},{"size":8018,"mtime":1635867601124,"results":"22","hashOfConfig":"15"},{"size":3294,"mtime":1635878849346,"results":"23","hashOfConfig":"15"},{"size":751,"mtime":1631684064316,"results":"24","hashOfConfig":"15"},{"size":1359,"mtime":1635269646789,"results":"25","hashOfConfig":"15"},{"size":698,"mtime":1635431886935,"results":"26","hashOfConfig":"15"},{"size":1074,"mtime":1635278940603,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"131fiok",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},"/Users/bottlecapmedia/Documents/Applications/saturday/src/index.js",[],"/Users/bottlecapmedia/Documents/Applications/saturday/src/App.js",["61"],"import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport LandingPage from './Pages/Landing_page';\nimport Video from './Pages/Video';\nimport './App.css';\nimport Prizing from './Pages/Prizing';\nimport BloodOrange from './Pages/BloodOrange';\nimport Quiz from './Pages/Quiz';\nimport Datacapture from './Pages/Datacapture';\nimport Instructions from './Pages/Instructions';\nimport RoombaPrize from './Pages/RoombaPrize';\nimport Redirecttoquiz from './Pages/Redirecttoquiz';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n            <Route path='/' exact strict component={LandingPage}/>\n            <Route path='/points' exact strict component={Redirecttoquiz}/>\n            <Route path='/roomba-prize' exact strict component={RoombaPrize}/>\n            <Route path='/educational-video' exact strict component={Video}/>\n            {/* <Route path='/prizing' exact strict component={Prizing}/> */}\n            <Route path='/blood-orange' exact strict component={BloodOrange}/>\n            <Route path='/Quiz' exact strict component={Quiz}/>\n            <Route path='/data-capture' exact strict component={Datacapture}/>\n            <Route path='/instructions' exact strict component={Instructions} />\n        </Switch>\n    </Router>                          \n  );\n}\n\nexport default App;\n","/Users/bottlecapmedia/Documents/Applications/saturday/src/reportWebVitals.js",[],"/Users/bottlecapmedia/Documents/Applications/saturday/src/Pages/Landing_page.js",["62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86"],"import React, {useEffect, useRef, useState} from 'react'\nimport Next from '../Components/NextButton/Next'\nimport DownArrow from './../Assets/arrow-down.png'\nimport { gsap } from 'gsap'\nimport './Pages.scss'\n\n/**\n* @author\n* @function LandingPage\n**/\n\nconst LandingPage = (props) => {\nconst days = ['-']\nconst year = ['-']\nconst month = ['-','Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep','Oct', 'Nov', 'Dec']\nconst province = ['-','ON', 'QC', 'NL', 'PE', 'NS', 'NB', 'MB', 'SK', 'AB','BC', 'YT', 'NT', 'NU']\nconst year_start = 1900\nconst year_end = 2021\nconst month_start = 0\nconst month_end = 31\nconst newRef = useRef(null)\nvar title = 'title'\nvar data=[];\nconst [annualPicker, setAnnualPicker] = useState({\n  title: '', \n  data: []\n})\nconst [toggle, setToggle] = useState(true)\nconst [settingDay, setSettingDay] = useState()\nconst [settingMonth, setSettingMonth] = useState()\nconst [settingYear, setSettingYear] = useState()\nconst [settingProvince, setProvinceYear] = useState()\n\n\n    const annual_picker = (start, end, location) => { \n      if(start == end){ \n        return \n      }\n      start = start + 1 \n      if(location == 'y'){ \n        year.unshift(start)\n      }\n      if(location == 'd'){ \n        days.push(start)\n      }\n \n    annual_picker(start, end, location)\n    }\n    annual_picker(year_start, year_end, 'y')\n    annual_picker(month_start, month_end, 'd')\n\n\n    const select_sidebar_list = (settitle, value) => { \n      if(settitle == 'day'){ \n        setSettingDay(value)\n      }\n      if(settitle == 'month'){ \n      setSettingMonth(value)\n      }\n      if(settitle == 'year'){ \n        setSettingYear(value)\n        }\n      if(settitle == 'province'){ \n          setProvinceYear(value)\n        }\n\n      if(!toggle){ \n        if(settitle == 'day'){\n          gsap.to('.dayArrow', {rotation: '+=90', duration: .3})\n        }\n        if(settitle == 'month'){\n          gsap.to('.monthArrow', {rotation: '+=90', duration: .3})\n        }\n        if(settitle == 'year'){\n          gsap.to('.yearArrow', {rotation: '+=90', duration: .3})\n        }\n        if(settitle == 'province'){\n          gsap.to('.provinceArrow', {rotation: '+=90', duration: .3})\n        }\n        gsap.to('.sidebar', {width: '0px', duration: .3})\n        setAnnualPicker({\n          title: '', \n          data: []\n        })\n        setToggle(!toggle)\n      }\n      // setSettingMonth()\n\n    }\n\n    const set_sidebar_dates = (title_, data_) => { \n      if(toggle){ \n        if(title_ == 'day'){\n          gsap.to('.dayArrow', {rotation: '+=-90', duration: .3})\n        }\n        if(title_ == 'month'){\n          gsap.to('.monthArrow', {rotation: '+=-90', duration: .3})\n        }\n        if(title_ == 'year'){\n          gsap.to('.yearArrow', {rotation: '+=-90', duration: .3})\n        }\n        if(title_ == 'province'){\n          gsap.to('.provinceArrow', {rotation: '+=-90', duration: .3})\n        }\n\n        gsap.to('.sidebar', {width: '70px', duration: .3})\n        setAnnualPicker({\n          title: title_, \n          data: data_\n        })\n  \n        setToggle(!toggle)\n      }\n      if(!toggle){ \n        if(title_ == 'day'){\n          gsap.to('.dayArrow', {rotation: '+=90', duration: .3})\n        }\n        if(title_ == 'month'){\n          gsap.to('.monthArrow', {rotation: '+=90', duration: .3})\n        }\n        if(title_ == 'year'){\n          gsap.to('.yearArrow', {rotation: '+=90', duration: .3})\n        }\n        if(title_ == 'province'){\n          gsap.to('.provinceArrow', {rotation: '+=90', duration: .3})\n        }\n\n        gsap.to('.sidebar', {width: '0px', duration: .3})\n        setAnnualPicker({\n          title: '', \n          data: []\n        })\n        setToggle(!toggle)\n      }\n    }\n    useEffect(()=>{\n\n    },[])\n\n\n\n  return (\n    <div className='home_bg'>\n      <div id='landing_wrapping'>\n\n      <div className='sidebar'>\n        <div className='title'>\n        <h4 style={{color:'white'}}>{annualPicker.title.toUpperCase()}</h4>\n        </div>\n        \n        <ul> \n        {\n            annualPicker.data.map((value, index) =>{\n              return(\n                <li className='opitons_list' name={annualPicker.title} key={index} onClick={()=>{select_sidebar_list(annualPicker.title, value)}}>\n                    {value}\n                </li>\n                )\n            })\n          }\n        </ul>\n      \n      </div>\n\n       <h1 style={{color: 'white', fontWeight: '100', fontSize: '2.2em', fontFamily: 'Fjalla One, sans-serif'}}>PLEASE VERIFY YOUR AGE </h1>\n       <div id='dob_capture'> \n       <div className='select_container marg_10'> \n       <div className='box'>\n        <select ref={newRef} value={settingDay}  id='test_click'> \n          {\n            days.map((value, index) =>{\n              return(\n                <option className='opitons' key={index}>\n                    {value =='-'? 'DAY':value}\n                </option>\n                )\n            })\n          }\n        </select>\n        </div>\n        <div className='bb-container '>\n        <div className='blackBox' onClick={()=>{set_sidebar_dates('day', days)}}>\n          <img className='downarrow dayArrow' src={DownArrow} alt='down-arrow' />\n        </div>\n        </div>\n        </div>\n\n        <div className='select_container'> \n        <select value={settingMonth} > \n          {\n            month.map((value, index) =>{\n              return(\n                <option className='opitons' key={index}>\n                    {value =='-'? 'MONTH':value}\n                </option>\n                )\n            })\n          }\n        </select>\n        <div className='bb-container'>\n        <div className='blackBox' onClick={()=>{set_sidebar_dates('month', month)}}>\n        <img className='downarrow monthArrow' src={DownArrow} alt='down-arrow' />\n        </div>\n        </div>\n        </div>\n\n        <div className='select_container '> \n        <select value={settingYear}> \n          {\n            year.map((value, index) =>{\n              return(\n                <option className='opitons' key={index} >\n                    {value =='2021'? 'YEAR':value}\n                </option>\n                )\n            })\n          }\n        </select>\n        <div className='bb-container'>\n        <div className='blackBox' onClick={()=>{set_sidebar_dates('year', year)}}>\n        <img className='downarrow yearArrow' src={DownArrow} alt='down-arrow' />\n        </div>\n        </div>\n        \n        </div>\n\n        <div className='select_container'> \n        <select value={settingProvince} > \n          {\n            province.map((value, index) =>{\n              return(\n                <option className='opitons' key={index}>\n                    {value =='-'? 'PROVINCE':value}\n                </option>\n                )\n            })\n          }\n        </select>\n        <div className='bb-container'>\n        <div className='blackBox' onClick={()=>{set_sidebar_dates('province', province)}}>\n        <img className='downarrow provinceArrow' src={DownArrow} alt='down-arrow' />\n        </div>\n        </div>\n        </div>\n        {/* <div className='select_container '> \n        <select value={settingYear}> \n          {\n            year.map((value, index) =>{\n              return(\n                <option className='opitons' key={index}>\n                    {value}\n                </option>\n                )\n            })\n          }\n        </select>\n        <div className='bb-container'>\n        <div className='blackBox' onClick={()=>{set_sidebar_dates('year', year)}}></div>\n        </div>\n        \n        </div> */}\n        <div id='next_btn_landing'>\n            <Next text='NEXT' verifyAge={settingYear} color='#E14925' link='/roomba-prize'/>\n        </div>\n       </div>\n      </div>\n      \n      {/* <div id='next_btn_holder'>\n        <Next image={ButtonImage} class='orange-btn' link='/educational-video' />\n      </div> */}\n      {/* Side bar */}\n\n    </div>\n\n\n\n\n  )\n\n}\n\nexport default LandingPage","/Users/bottlecapmedia/Documents/Applications/saturday/src/Pages/Prizing.js",[],"/Users/bottlecapmedia/Documents/Applications/saturday/src/Pages/Video.js",["87"],"import React, { useEffect } from 'react'\nimport { useHistory } from 'react-router'\nimport VideoMp4 from './../Assets/videos/Saturday.mp4'\n\n/**\n* @author\n* @function Video\n**/\n\nconst Video = (props) => {\n  const history = useHistory()\n  useEffect(()=>{\n\n    // const randNum = Math.floor(Math.random() * 2)\n    // console.log(randNum)\n    setTimeout(()=>{\n      history.push('/blood-orange')\n    //   if(randNum === 1){\n    //     history.push('/prizing')\n    //   }else if(randNum === 0){\n    //     history.push('/blood-orange')\n    //   }\n\n    },9000)\n  }, [])\n  return(\n    <video width=\"100%\" height=\"100%\" autoPlay muted >\n    <source src={VideoMp4} type=\"video/mp4\"/>\n   </video>\n\n\n   )\n\n }\n\nexport default Video","/Users/bottlecapmedia/Documents/Applications/saturday/src/Pages/BloodOrange.js",["88"],"import React from 'react'\nimport Next from '../Components/NextButton/Next'\nimport NextGreen from '../Assets/next-green.png'\nimport VapePen from '../Assets/vape-pen.svg'\nimport './Pages.scss'\n\n/**\n* @author\n* @function BloodOrange\n**/\n\nconst BloodOrange = (props) => {\n  return(\n    <div className='Prizing bloodOrangeBg'>\n\n<div className='columns_holder'>\n\n<div className='shared_width left-content'>\n\n\n\n<div className='shared_width'>\n<div className='info_container'>\n<h1 className='blood_orange_h1'>BLOOD</h1>\n        <h1 className='blood_orange_h1 Title2'>ORANGE</h1>\n        <h5 className='blood_orange_h1 ROR'>1G 510 CARTRIDGE</h5>\n    </div> \n<div className='info_container'>\n        <p className='margin_zero' style={{fontSize: '13px'}}>Blood Orange by Saturday is the sweet and juicy with a tangy zip and touch of floral pine. Enjoy a crisp twist on citrus.</p>\n    </div> \n    <div className='info_container'>\n        <p className='margin_zero'>SATIVA</p>\n        <p className='margin_zero thin'>THC 19-25%</p>\n        <p className='margin_zero thin'>CBD 0-1%</p>\n    </div>   \n     <div className='info_container'>\n        <p className='margin_zero'>AROMA & FLAVOURS</p>\n        <p className='margin_zero thin'>Sweet Citrus Fruity</p>\n    </div>\n\n    <div className='info_container'>\n        <p className='margin_zero'>LICENSED PRODUCER</p>\n        <p className='margin_zero thin'>WeedMD Rx Inc.</p>\n    </div>\n</div>\n\n\n\n</div>\n<div>\n    <img id='vapePen' src={VapePen} alt='' />\n</div>\n\n        </div>\n        <div className='next_btn_blood_orange'>\n            <Next text=\"LET'S BEGIN\" link='/quiz' color='#535938'/>\n        </div>\n    </div>\n   )\n\n }\n\nexport default BloodOrange","/Users/bottlecapmedia/Documents/Applications/saturday/src/Pages/Quiz.js",["89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107"],"import React, { useEffect, useRef, useState } from 'react'\nimport { gsap } from 'gsap'\nimport { useHistory } from 'react-router'\nimport QuizOrangeBg from './../Assets/orange-vape-bg.png'\nimport QuizGreenBg from './../Assets/green-quiz-bg.png'\n\n/**\n* @author\n* @function Quiz\n**/\n\n// We are going to have a list of questions\n// from this list we're going to randomly select an index\n// this index will be stored in memory and deleted from the other array\n// we then run an conditional statement to determine what are the answers\n// we then concatinate when the answer is correct or do nothing if it is not. \n// we're nor going to call and random search function on the old array for another question. \n\nconst Quiz = (props) => {\n    var completed = []\n    var points = 0\n    var counter = 0\n    var bg_counter = 0\n    const question = useRef()\n    const a = useRef()\n    const b = useRef()\n    const c = useRef()\n    const d = useRef()\n    const bg = useRef()\n    const questionaire_limit = 5\n    const list_of_questions = ['1. Saturday 1G Blood Orange', '2. Saturday Blood Orange is priced perfectly for which on-the-go shopper?', \"3. When speaking about the 1G Blood Orange product, I'd start with:\", \"4. Orange flavour can be difficult to nail, but Saturday's Blood Orange has done so beautifully because:\", '5. I’d Recommend Saturday Blood Orange to a shopper in a situation where:']\n    const history = useHistory()\n    var set_forth_div = ['false']\n    \n\n\n    useEffect(() => {\n        randList()\n    }, [])\n\n\n\n\n\n\n\n\n    const randList = () => {\n        gsap.to('.green_bg', {backgroundColor: '#535938', duration: 0})\n        var newList = list_of_questions\n\n        if (completed.length >= questionaire_limit) {\n           \n            if(points < 4){ \n                localStorage.setItem('points', points)\n                history.push('/points')\n                // window.location.reload()\n            }\n            else{ \n                localStorage.setItem('points', points)\n                history.push('/data-capture')\n            }\n           \n        } else {\n            // Math.round(Math.random() * 4)\n            let random = counter++\n            const check_completed = completed.find(element => element == random)\n\n            // For some reason zero is being ignored. That why it's in the conditional statement below. \n            if (check_completed || check_completed === 0) {\n                randList()\n            }\n            else {\n                completed.push(random)\n                question.current.textContent = list_of_questions[random]\n                console.log(completed)\n                switch (random) {\n                    case 0:\n                        bg.current.style.background = `url(${QuizOrangeBg})`\n                        bg.current.style.backgroundSize = 'cover'\n                        a.current.textContent = 'Is a Hybrid Offering'\n                        b.current.textContent = 'Is an Indica'\n                        c.current.textContent = 'Is a Sativa'\n                        d.current.textContent = 'All the above'\n                       \n                        break;\n                    case 1:\n                        bg.current.style.background = `url(${QuizGreenBg})`\n                        bg.current.style.backgroundSize = 'cover'\n                        a.current.textContent = 'Price Sensitive'\n                        b.current.textContent = 'High End'\n                        c.current.textContent = 'Mainstream'\n                        d.current.textContent = 'All the above'\n                       \n                        break;\n                    case 2:\n                        bg.current.style.background = `url(${QuizOrangeBg})`\n                        bg.current.style.backgroundSize = 'cover'\n                        a.current.textContent = 'The Brand'\n                        b.current.textContent = 'The Value'\n                        c.current.textContent = 'The Potency'\n                        d.current.textContent = 'The Flavour'\n                       \n                        break;\n                    case 3:\n                        bg.current.style.background = `url(${QuizGreenBg})`\n                        bg.current.style.backgroundSize = 'cover'\n                        a.current.textContent = \"It's crafted with terpenes and other aromatic compounds native to both oranges and cannabis\"\n                        b.current.textContent = \"It's all limonene, which is the only citrus aromatic you need\"\n                        c.current.textContent = \"We hired the Keebler elves.\"\n                        d.current.textContent = 'All the above'\n                       \n                        break;\n                    case 4:\n                        bg.current.style.background = `url(${QuizOrangeBg})`\n                        bg.current.style.backgroundSize = 'cover'\n                        a.current.textContent = 'An experienced or occasional cannabis shopper who is seeking a smooth, high-THC joint-smoking experience and values the dollars in their pocket.'\n                        b.current.textContent = 'A shopper who is new to cannabis or is re-entering the category after many years, and is looking for a balanced offering.'\n                        c.current.textContent = 'An experienced or occasional smoker who is looking for a tasty, high-THC experience while they’re on-the-go that won’t break the bank'\n                        d.current.textContent = 'An occasional smoker who is looking for edibles.'\n                       \n                        break;\n                }\n            }\n        }\n    }\n\n\n \n\n    const selectved_answer = (selected_data) => { \n    \n\n        gsap.to(`.${selected_data}`, {backgroundColor: '#40473F', duration: 0.5})\n        switch(completed[completed.length -1]){\n            case 0: \n            if(selected_data == 'c'){ c.current.textContent = 'Correct'; points++;  console.log(`updated points: ${points}`)}\n            else{  eval(selected_data).current.textContent = 'Incorrect'; }\n            break;\n\n            case 1:\n                if(selected_data == 'a'){ a.current.textContent = 'Correct'; points++;  console.log(`updated points: ${points}`)}\n                else{ eval(selected_data).current.textContent = 'Incorrect';}\n\n                break;\n            case 2:\n                if(selected_data == 'd'){ d.current.textContent = 'Correct'; points++;  console.log(`updated points: ${points}`)}\n                else{ eval(selected_data).current.textContent = 'Incorrect'}\n\n                break;\n            case 3:\n                if(selected_data == 'b'){ b.current.textContent = 'Correct'; points++;  console.log(`updated points: ${points}`)}\n                else{ eval(selected_data).current.textContent = 'Incorrect'}\n\n                break;\n            case 4:\n                if(selected_data == 'c'){ c.current.textContent = 'Correct'; points++;  console.log(`updated points: ${points}`)}\n                else{ eval(selected_data).current.textContent = 'Incorrect'}\n                break;\n        }\n\n\n    setTimeout(()=>{\n        randList()\n    }, 1000)\n        \n \n    }\n    \n\n    return (\n        <div className={'Prizing'} ref={bg}>\n            <div id='quiz_holder'>\n                <div id='title_holder'>\n                    <h3 ref={question}></h3>\n                </div>\n                <div id='answer_list'>\n                    <div className='green_bg a' onClick={() => selectved_answer('a')}><p className='ans' ref={a}></p></div>\n                    <div className='green_bg b' onClick={() => selectved_answer('b')}><p className='ans' ref={b}></p></div>\n                    <div className='green_bg c' onClick={() => selectved_answer('c')}><p className='ans' ref={c}></p></div>\n                    <div className={set_forth_div == 'true'?'displayNone':'green_bg d'} onClick={() => selectved_answer('d')}><p className='ans' ref={d}></p></div>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Quiz\n","/Users/bottlecapmedia/Documents/Applications/saturday/src/Pages/Datacapture.js",["108"],"/Users/bottlecapmedia/Documents/Applications/saturday/src/Pages/Instructions.js",[],"/Users/bottlecapmedia/Documents/Applications/saturday/src/Components/NextButton/Next.js",["109"],"import React, { useState } from 'react'\nimport { useHistory } from 'react-router'\nimport './Next.scss'\n\n/**\n* @author\n* @function Next\n**/\nconst date = new Date()\nconst yr = date.getFullYear()\nconst limit = yr - 19\n\n\nconst Next = (props) => {\n    const history = useHistory()\n  \n    const verify_age = () => { \n      console.log(limit)\n      console.log(props.verifyAge)\n      if(props.verifyAge < limit){ \n        history.push(props.link)\n      }\n      if(props.verifyAge > limit){\n        window.location.replace('https://www.gotmilk.com/')\n      }\n      if(props.verifyAge == undefined){\n        history.push(props.link)\n      }\n      // else(\n      //   window.location.reload('https://google.com')\n      // )\n    }\n    // Take two props - image and link\n    const [background] = useState({\n        style: { \n            backgroundColor: `${props.color}`,\n            border: 'none', \n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n            // background: `url(${props.image}) no-repeat center center`,\n            // backgroundSize: 'contain',\n           \n        },\n        link: ''\n    })\n\n  return(\n    <button onClick={verify_age} style={background.style} className={`next_btn ${props.class}`}>{props.text} <img id='next_image' src={props.image} alt='' /></button>\n   )\n\n }\n\nexport default Next","/Users/bottlecapmedia/Documents/Applications/saturday/src/Pages/RoombaPrize.js",[],"/Users/bottlecapmedia/Documents/Applications/saturday/src/Pages/Redirecttoquiz.js",["110"],"import React, { useEffect } from 'react'\nimport Points from './../Assets/orig-roomba.png'\nimport { useHistory } from 'react-router'\nimport Next from '../Components/NextButton/Next'\n\n/**\n* @author\n* @function Redirecttoquiz\n**/\n\nconst Redirecttoquiz = (props) => {\n    const history = useHistory()\n    const points = localStorage.getItem('points')\n    useEffect(() => {\n        // setTimeout(()=>{\n        //     history.push('/quiz')\n        // },2000)\n    }, [])\n    return (\n        <div className='points_container'>\n            <img className='points_page' src={Points} alt='points' />\n            <div className='messaging_for_points'>\n                <h2 className='msg_text'>\n                    YOU GOT {points}/5\n                    NOT QUITE ENOUGH!\n                    TRY AGAIN FOR YOUR\n                    CHANCE TO WIN!\n                </h2>\n            </div>\n            <div className='next_btn_ '>\n                <Next class='short' text='TRY AGAIN' link='/quiz' color='#D9442A' />\n            </div>\n        </div>\n    )\n\n}\n\nexport default Redirecttoquiz",{"ruleId":"111","severity":1,"message":"112","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":15},{"ruleId":"111","severity":1,"message":"115","line":22,"column":5,"nodeType":"113","messageId":"114","endLine":22,"endColumn":10},{"ruleId":"111","severity":1,"message":"116","line":23,"column":5,"nodeType":"113","messageId":"114","endLine":23,"endColumn":9},{"ruleId":"117","severity":1,"message":"118","line":36,"column":16,"nodeType":"119","messageId":"120","endLine":36,"endColumn":18},{"ruleId":"117","severity":1,"message":"118","line":40,"column":19,"nodeType":"119","messageId":"120","endLine":40,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":43,"column":19,"nodeType":"119","messageId":"120","endLine":43,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":54,"column":19,"nodeType":"119","messageId":"120","endLine":54,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":57,"column":19,"nodeType":"119","messageId":"120","endLine":57,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":60,"column":19,"nodeType":"119","messageId":"120","endLine":60,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":63,"column":19,"nodeType":"119","messageId":"120","endLine":63,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":68,"column":21,"nodeType":"119","messageId":"120","endLine":68,"endColumn":23},{"ruleId":"117","severity":1,"message":"118","line":71,"column":21,"nodeType":"119","messageId":"120","endLine":71,"endColumn":23},{"ruleId":"117","severity":1,"message":"118","line":74,"column":21,"nodeType":"119","messageId":"120","endLine":74,"endColumn":23},{"ruleId":"117","severity":1,"message":"118","line":77,"column":21,"nodeType":"119","messageId":"120","endLine":77,"endColumn":23},{"ruleId":"117","severity":1,"message":"118","line":93,"column":19,"nodeType":"119","messageId":"120","endLine":93,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":96,"column":19,"nodeType":"119","messageId":"120","endLine":96,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":99,"column":19,"nodeType":"119","messageId":"120","endLine":99,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":102,"column":19,"nodeType":"119","messageId":"120","endLine":102,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":115,"column":19,"nodeType":"119","messageId":"120","endLine":115,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":118,"column":19,"nodeType":"119","messageId":"120","endLine":118,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":121,"column":19,"nodeType":"119","messageId":"120","endLine":121,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":124,"column":19,"nodeType":"119","messageId":"120","endLine":124,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":174,"column":28,"nodeType":"119","messageId":"120","endLine":174,"endColumn":30},{"ruleId":"117","severity":1,"message":"118","line":194,"column":28,"nodeType":"119","messageId":"120","endLine":194,"endColumn":30},{"ruleId":"117","severity":1,"message":"118","line":213,"column":28,"nodeType":"119","messageId":"120","endLine":213,"endColumn":30},{"ruleId":"117","severity":1,"message":"118","line":233,"column":28,"nodeType":"119","messageId":"120","endLine":233,"endColumn":30},{"ruleId":"121","severity":1,"message":"122","line":25,"column":6,"nodeType":"123","endLine":25,"endColumn":8,"suggestions":"124"},{"ruleId":"111","severity":1,"message":"125","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":17},{"ruleId":"111","severity":1,"message":"126","line":1,"column":36,"nodeType":"113","messageId":"114","endLine":1,"endColumn":44},{"ruleId":"111","severity":1,"message":"127","line":23,"column":9,"nodeType":"113","messageId":"114","endLine":23,"endColumn":19},{"ruleId":"121","severity":1,"message":"128","line":39,"column":8,"nodeType":"123","endLine":39,"endColumn":10,"suggestions":"129"},{"ruleId":"111","severity":1,"message":"130","line":50,"column":13,"nodeType":"113","messageId":"114","endLine":50,"endColumn":20},{"ruleId":"117","severity":1,"message":"118","line":67,"column":71,"nodeType":"119","messageId":"120","endLine":67,"endColumn":73},{"ruleId":"131","severity":1,"message":"132","line":77,"column":17,"nodeType":"133","messageId":"134","endLine":123,"endColumn":18},{"ruleId":"131","severity":1,"message":"132","line":135,"column":9,"nodeType":"133","messageId":"134","endLine":160,"endColumn":10},{"ruleId":"117","severity":1,"message":"118","line":137,"column":30,"nodeType":"119","messageId":"120","endLine":137,"endColumn":32},{"ruleId":"135","severity":1,"message":"136","line":138,"column":20,"nodeType":"137","messageId":"120","endLine":138,"endColumn":24},{"ruleId":"117","severity":1,"message":"118","line":142,"column":34,"nodeType":"119","messageId":"120","endLine":142,"endColumn":36},{"ruleId":"135","severity":1,"message":"136","line":143,"column":23,"nodeType":"137","messageId":"120","endLine":143,"endColumn":27},{"ruleId":"117","severity":1,"message":"118","line":147,"column":34,"nodeType":"119","messageId":"120","endLine":147,"endColumn":36},{"ruleId":"135","severity":1,"message":"136","line":148,"column":23,"nodeType":"137","messageId":"120","endLine":148,"endColumn":27},{"ruleId":"117","severity":1,"message":"118","line":152,"column":34,"nodeType":"119","messageId":"120","endLine":152,"endColumn":36},{"ruleId":"135","severity":1,"message":"136","line":153,"column":23,"nodeType":"137","messageId":"120","endLine":153,"endColumn":27},{"ruleId":"117","severity":1,"message":"118","line":157,"column":34,"nodeType":"119","messageId":"120","endLine":157,"endColumn":36},{"ruleId":"135","severity":1,"message":"136","line":158,"column":23,"nodeType":"137","messageId":"120","endLine":158,"endColumn":27},{"ruleId":"138","severity":1,"message":"139","line":175,"column":21,"nodeType":"140","endLine":175,"endColumn":40},{"ruleId":"117","severity":1,"message":"118","line":181,"column":51,"nodeType":"119","messageId":"120","endLine":181,"endColumn":53},{"ruleId":"111","severity":1,"message":"141","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"117","severity":1,"message":"118","line":26,"column":26,"nodeType":"119","messageId":"120","endLine":26,"endColumn":28},{"ruleId":"111","severity":1,"message":"142","line":12,"column":11,"nodeType":"113","messageId":"114","endLine":12,"endColumn":18},"no-unused-vars","'Prizing' is defined but never used.","Identifier","unusedVar","'title' is assigned a value but never used.","'data' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["143"],"'NextGreen' is defined but never used.","'useState' is defined but never used.","'bg_counter' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'randList'. Either include it or remove the dependency array.",["144"],"'newList' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-eval","eval can be harmful.","CallExpression","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'useEffect' is defined but never used.","'history' is assigned a value but never used.",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [history]",{"range":"149","text":"150"},"Update the dependencies array to be: [randList]",{"range":"151","text":"152"},[559,561],"[history]",[1509,1511],"[randList]"]